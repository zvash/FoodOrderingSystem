server:
  port: 8183

logging:
  level:
    com.food.ordering.system: DEBUG

restaurant-service:
  restaurant-approval-request-topic-name: restaurant-approval-request
  restaurant-approval-response-topic-name: restaurant-approval-response

spring:
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=restaurant&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
    username: siavash
    password: ENC(4Mk7vvHDC+s5oJLBP2srRQRoPEKx1mAHUgrt82ZcebuqK0++k1CBC7SLyM5fdwI1)
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      platform: postgres
      schema-locations: classpath:init-schema.sql
      mode: always
      data-locations: classpath:init-data.sql

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  number-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-time-ms: 60000
  retry-count: 5

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringSerializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  restaurant-approval-consumer-group-id: restaurant-approval-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  poll-timeout-ms: 500
  max-poll-records: 1048576
  max-partition-fetch-bytes-default: 1
  max-partition-fetch-bytes-boost-factor: 150

jasypt:
  encryptor:
    password: ${ENCRYPT_KEY}